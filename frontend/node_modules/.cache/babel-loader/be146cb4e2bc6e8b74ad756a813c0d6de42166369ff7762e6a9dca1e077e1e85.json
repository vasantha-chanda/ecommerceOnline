{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport jwtDecode from \"jwt-decode\";\nimport axios from \"axios\";\nimport { url, setHeaders } from \"./api\";\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  name: \"\",\n  email: \"\",\n  _id: \"\",\n  registerStatus: \"\",\n  registerError: \"\",\n  loginStatus: \"\",\n  loginError: \"\",\n  userLoaded: false\n};\nexport const registerUser = createAsyncThunk(\"auth/registerUser\", async (values, {\n  rejectWithValue\n}) => {\n  try {\n    const token = await axios.post(`${url}/register`, {\n      name: values.name,\n      email: values.email,\n      password: values.password\n    });\n    localStorage.setItem(\"token\", token.data);\n    return token.data;\n  } catch (error) {\n    console.log(error.response.data);\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const loginUser = createAsyncThunk(\"auth/loginUser\", async (values, {\n  rejectWithValue\n}) => {\n  try {\n    const token = await axios.post(`${url}/login`, {\n      email: values.email,\n      password: values.password\n    });\n    localStorage.setItem(\"token\", token.data);\n    return token.data;\n  } catch (error) {\n    console.log(error.response);\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const getUser = createAsyncThunk(\"auth/getUser\", async (id, {\n  rejectWithValue\n}) => {\n  try {\n    const token = await axios.get(`${url}/user/${id}`, setHeaders());\n    localStorage.setItem(\"token\", token.data);\n    return token.data;\n  } catch (error) {\n    console.log(error.response);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    loadUser(state, action) {\n      const token = state.token;\n      if (token) {\n        const user = jwtDecode(token);\n        return {\n          ...state,\n          token,\n          name: user.name,\n          email: user.email,\n          _id: user._id,\n          userLoaded: true\n        };\n      } else return {\n        ...state,\n        userLoaded: true\n      };\n    },\n    logoutUser(state, action) {\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: \"\",\n        name: \"\",\n        email: \"\",\n        _id: \"\",\n        registerStatus: \"\",\n        registerError: \"\",\n        loginStatus: \"\",\n        loginError: \"\"\n      };\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(registerUser.pending, (state, action) => {\n      return {\n        ...state,\n        registerStatus: \"pending\"\n      };\n    });\n    builder.addCase(registerUser.fulfilled, (state, action) => {\n      if (action.payload) {\n        const user = jwtDecode(action.payload);\n        return {\n          ...state,\n          token: action.payload,\n          name: user.name,\n          email: user.email,\n          _id: user._id,\n          registerStatus: \"success\"\n        };\n      } else return state;\n    });\n    builder.addCase(registerUser.rejected, (state, action) => {\n      return {\n        ...state,\n        registerStatus: \"rejected\",\n        registerError: action.payload\n      };\n    });\n    builder.addCase(loginUser.pending, (state, action) => {\n      return {\n        ...state,\n        loginStatus: \"pending\"\n      };\n    });\n    builder.addCase(loginUser.fulfilled, (state, action) => {\n      if (action.payload) {\n        const user = jwtDecode(action.payload);\n        return {\n          ...state,\n          token: action.payload,\n          name: user.name,\n          email: user.email,\n          _id: user._id,\n          loginStatus: \"success\"\n        };\n      } else return state;\n    });\n    builder.addCase(loginUser.rejected, (state, action) => {\n      return {\n        ...state,\n        loginStatus: \"rejected\",\n        loginError: action.payload\n      };\n    });\n    builder.addCase(getUser.pending, (state, action) => {\n      return {\n        ...state,\n        getUserStatus: \"pending\"\n      };\n    });\n    builder.addCase(getUser.fulfilled, (state, action) => {\n      if (action.payload) {\n        const user = jwtDecode(action.payload);\n        return {\n          ...state,\n          token: action.payload,\n          name: user.name,\n          email: user.email,\n          _id: user._id,\n          getUserStatus: \"success\"\n        };\n      } else return state;\n    });\n    builder.addCase(getUser.rejected, (state, action) => {\n      return {\n        ...state,\n        getUserStatus: \"rejected\",\n        getUserError: action.payload\n      };\n    });\n  }\n});\nexport const {\n  loadUser,\n  logoutUser\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","jwtDecode","axios","url","setHeaders","initialState","token","localStorage","getItem","name","email","_id","registerStatus","registerError","loginStatus","loginError","userLoaded","registerUser","values","rejectWithValue","post","password","setItem","data","error","console","log","response","loginUser","getUser","id","get","authSlice","reducers","loadUser","state","action","user","logoutUser","removeItem","extraReducers","builder","addCase","pending","fulfilled","payload","rejected","getUserStatus","getUserError","actions","reducer"],"sources":["C:/Users/srika/OneDrive/Desktop/ecommerce/frontend/src/features/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\nimport { url, setHeaders } from \"./api\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  name: \"\",\r\n  email: \"\",\r\n  _id: \"\",\r\n  registerStatus: \"\",\r\n  registerError: \"\",\r\n  loginStatus: \"\",\r\n  loginError: \"\",\r\n  userLoaded: false,\r\n};\r\n\r\nexport const registerUser = createAsyncThunk(\r\n  \"auth/registerUser\",\r\n  async (values, { rejectWithValue }) => {\r\n    try {\r\n      const token = await axios.post(`${url}/register`, {\r\n        name: values.name,\r\n        email: values.email,\r\n        password: values.password,\r\n      });\r\n\r\n      localStorage.setItem(\"token\", token.data);\r\n\r\n      return token.data;\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const loginUser = createAsyncThunk(\r\n  \"auth/loginUser\",\r\n  async (values, { rejectWithValue }) => {\r\n    try {\r\n      const token = await axios.post(`${url}/login`, {\r\n        email: values.email,\r\n        password: values.password,\r\n      });\r\n\r\n      localStorage.setItem(\"token\", token.data);\r\n      return token.data;\r\n    } catch (error) {\r\n      console.log(error.response);\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getUser = createAsyncThunk(\r\n  \"auth/getUser\",\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const token = await axios.get(`${url}/user/${id}`, setHeaders());\r\n\r\n      localStorage.setItem(\"token\", token.data);\r\n\r\n      return token.data;\r\n    } catch (error) {\r\n      console.log(error.response);\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    loadUser(state, action) {\r\n      const token = state.token;\r\n\r\n      if (token) {\r\n        const user = jwtDecode(token);\r\n        return {\r\n          ...state,\r\n          token,\r\n          name: user.name,\r\n          email: user.email,\r\n          _id: user._id,\r\n          userLoaded: true,\r\n        };\r\n      } else return { ...state, userLoaded: true };\r\n    },\r\n    logoutUser(state, action) {\r\n      localStorage.removeItem(\"token\");\r\n\r\n      return {\r\n        ...state,\r\n        token: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        _id: \"\",\r\n        registerStatus: \"\",\r\n        registerError: \"\",\r\n        loginStatus: \"\",\r\n        loginError: \"\",\r\n      };\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(registerUser.pending, (state, action) => {\r\n      return { ...state, registerStatus: \"pending\" };\r\n    });\r\n    builder.addCase(registerUser.fulfilled, (state, action) => {\r\n      if (action.payload) {\r\n        const user = jwtDecode(action.payload);\r\n        return {\r\n          ...state,\r\n          token: action.payload,\r\n          name: user.name,\r\n          email: user.email,\r\n          _id: user._id,\r\n          registerStatus: \"success\",\r\n        };\r\n      } else return state;\r\n    });\r\n    builder.addCase(registerUser.rejected, (state, action) => {\r\n      return {\r\n        ...state,\r\n        registerStatus: \"rejected\",\r\n        registerError: action.payload,\r\n      };\r\n    });\r\n    builder.addCase(loginUser.pending, (state, action) => {\r\n      return { ...state, loginStatus: \"pending\" };\r\n    });\r\n    builder.addCase(loginUser.fulfilled, (state, action) => {\r\n      if (action.payload) {\r\n        const user = jwtDecode(action.payload);\r\n        return {\r\n          ...state,\r\n          token: action.payload,\r\n          name: user.name,\r\n          email: user.email,\r\n          _id: user._id,\r\n          loginStatus: \"success\",\r\n        };\r\n      } else return state;\r\n    });\r\n    builder.addCase(loginUser.rejected, (state, action) => {\r\n      return {\r\n        ...state,\r\n        loginStatus: \"rejected\",\r\n        loginError: action.payload,\r\n      };\r\n    });\r\n    builder.addCase(getUser.pending, (state, action) => {\r\n      return {\r\n        ...state,\r\n        getUserStatus: \"pending\",\r\n      };\r\n    });\r\n    builder.addCase(getUser.fulfilled, (state, action) => {\r\n      if (action.payload) {\r\n        const user = jwtDecode(action.payload);\r\n        return {\r\n          ...state,\r\n          token: action.payload,\r\n          name: user.name,\r\n          email: user.email,\r\n          _id: user._id,\r\n          getUserStatus: \"success\",\r\n        };\r\n      } else return state;\r\n    });\r\n    builder.addCase(getUser.rejected, (state, action) => {\r\n      return {\r\n        ...state,\r\n        getUserStatus: \"rejected\",\r\n        getUserError: action.payload,\r\n      };\r\n    });\r\n  },\r\n});\r\n\r\nexport const { loadUser, logoutUser } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}